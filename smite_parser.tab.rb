#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
class SmiteParser < Racc::Parser

module_eval(<<'...end smite_parser.y/module_eval...', 'smite_parser.y', 143)
  
def parse(str)
  @q = []
  until str.empty?
    case str
    when /\A\s+/
    when /\A(#{items})/i
      @q.push [:ITEM, $&.downcase]
    when /\A(#{gods})/i
      @q.push [:GOD, $&.downcase]
    when /\A1st/i
      @q.push [:FIRST, $&.to_i]
    when /\A2nd/i
      @q.push [:SECOND, $&.to_i]
    when /\A3rd/i
      @q.push [:THIRD, $&.to_i]
    when /\A4th/i
      @q.push [:FOURTH, $&.to_i]
    when /\A5th/i
      @q.push [:FIFTH, $&.to_i]
    when /\A\d+/
      @q.push [:NUM, $&.to_i]
    when /\Aability/i
      @q.push [:ABILITY, $&.downcase]
    when /\Aultimate/i
      @q.push [:FOURTH, 4]
      @q.push [:ABILITY, 'ability']
    when /\Apassive/i
      @q.push [:PASSIVE, $&.downcase]
    when /\A(recommended )?items/i
      @q.push [:RECOMMENDED, $&.downcase]
    when /\Aeffects/i
      @q.push [:EFFECTS, $&.downcase]
    when /\Awith/i
      @q.push [:WITH, $&.downcase]
    when /\A(base )?stats/i
      @q.push [:STATS, $&.downcase]
    when /\A(at )?level/i
      @q.push [:LEVEL, $&.downcase]
    when /\A(#{dmg_types})/i
      @q.push [:DMG_TYPE, $&.downcase]
    when /\A(#{atk_ranges})/i
      @q.push [:ATK_RANGE, $&.downcase]
    when /\A(#{roles})/i
      @q.push [:ROLE, $&.downcase]
    when /\A(#{pantheons})/i
      @q.push [:PANTHEON, $&.downcase]
    when /\A./
      @q.push [$&, $&]
    end
    str = $'
  end
  @q.push [false, '$end']
  do_parse
end

def dmg_types
  'physical|magic(al)?'
end

def atk_ranges
  'ranged|melee'
end

def roles
  @roles ||= Smite::Game.roles.join('|')
end

def pantheons
  @pantheons ||= Smite::Game.pantheons.join('|')
end

def gods
  @gods ||= Smite::Game.gods.map { |g| g.name.downcase }.join('|')
end

def items
  @items ||= Smite::Game.devices.map { |d| d.name.downcase }.join('|')
end

def next_token
  @q.shift
end

...end smite_parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     6,    18,    12,    13,    14,    15,    10,    20,    21,    22,
    23,    24,    25,    26,    27,    28,    12,    13,    14,    15,
    40,    35,    29,    41,    32,    34,    33,    30,    36,    38,
    39,    16,    38,    43,    44,    41 ]

racc_action_check = [
     0,     6,     5,     5,     5,     5,     0,     6,     6,     6,
     6,     6,     6,     6,     6,    10,     0,     0,     0,     0,
    37,    20,    10,    37,    18,    19,    18,    16,    32,    33,
    36,     1,    39,    40,    41,    42 ]

racc_action_pointer = [
    -2,    31,   nil,   nil,   nil,   -16,    -2,   nil,   nil,   nil,
     5,   nil,   nil,   nil,   nil,   nil,    27,   nil,    20,    16,
    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    23,    21,   nil,   nil,    24,    16,   nil,    24,
    28,    26,    28,   nil,   nil ]

racc_action_default = [
   -35,   -35,    -1,    -2,    -3,    -4,    -5,    -6,    -7,    -8,
   -26,   -30,   -31,   -32,   -33,   -34,   -35,   -29,   -14,   -35,
   -35,   -19,   -20,   -21,   -22,   -23,   -24,   -25,   -27,   -28,
    45,    -9,   -35,   -35,   -17,   -18,   -13,   -12,   -16,   -35,
   -35,   -35,   -10,   -11,   -15 ]

racc_goto_table = [
    37,     8,    11,     4,     5,     7,    42,    17,     3,     9,
    31,     2,    19,     1 ]

racc_goto_check = [
    10,     7,    12,     4,     5,     6,    10,    12,     3,     8,
     9,     2,    11,     1 ]

racc_goto_pointer = [
   nil,    13,    11,     8,     3,     4,     5,     1,     9,    -8,
   -33,     6,     2 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 23, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 24, :_reduce_none,
  1, 25, :_reduce_5,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  1, 25, :_reduce_none,
  3, 29, :_reduce_9,
  4, 31, :_reduce_10,
  4, 31, :_reduce_11,
  2, 31, :_reduce_12,
  2, 31, :_reduce_13,
  0, 31, :_reduce_14,
  3, 32, :_reduce_15,
  1, 32, :_reduce_16,
  3, 28, :_reduce_17,
  3, 28, :_reduce_18,
  2, 28, :_reduce_19,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  1, 33, :_reduce_none,
  2, 30, :_reduce_25,
  1, 26, :_reduce_26,
  2, 26, :_reduce_27,
  2, 26, :_reduce_28,
  2, 27, :_reduce_29,
  1, 27, :_reduce_none,
  1, 34, :_reduce_31,
  1, 34, :_reduce_32,
  1, 34, :_reduce_33,
  1, 34, :_reduce_34 ]

racc_reduce_n = 35

racc_shift_n = 45

racc_token_table = {
  false => 0,
  :error => 1,
  :GOD => 2,
  :STATS => 3,
  :LEVEL => 4,
  :NUM => 5,
  :WITH => 6,
  "," => 7,
  :ITEM => 8,
  :ABILITY => 9,
  :PASSIVE => 10,
  :FIRST => 11,
  :SECOND => 12,
  :THIRD => 13,
  :FOURTH => 14,
  :FIFTH => 15,
  :RECOMMENDED => 16,
  :EFFECTS => 17,
  :DMG_TYPE => 18,
  :ATK_RANGE => 19,
  :ROLE => 20,
  :PANTHEON => 21 }

racc_nt_base = 22

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "GOD",
  "STATS",
  "LEVEL",
  "NUM",
  "WITH",
  "\",\"",
  "ITEM",
  "ABILITY",
  "PASSIVE",
  "FIRST",
  "SECOND",
  "THIRD",
  "FOURTH",
  "FIFTH",
  "RECOMMENDED",
  "EFFECTS",
  "DMG_TYPE",
  "ATK_RANGE",
  "ROLE",
  "PANTHEON",
  "$start",
  "target",
  "information",
  "god_info",
  "item_info",
  "search_info",
  "god_ability",
  "god_stats",
  "god_items",
  "level_and_items",
  "item_list",
  "nth",
  "search_item" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

# reduce 3 omitted

# reduce 4 omitted

module_eval(<<'.,.,', 'smite_parser.y', 12)
  def _reduce_5(val, _values, result)
          result = Smite::Game.god(val[0])
    
    result
  end
.,.,

# reduce 6 omitted

# reduce 7 omitted

# reduce 8 omitted

module_eval(<<'.,.,', 'smite_parser.y', 20)
  def _reduce_9(val, _values, result)
          result   = Smite::Game.god(val[0]).stats
      result   = result.at_level(val[2][:level]) if val[2][:level]
      result   = result.with_items(val[2][:items]) if val[2][:items]

      result
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 29)
  def _reduce_10(val, _values, result)
          result = { level: val[1], items: val[3] }
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 32)
  def _reduce_11(val, _values, result)
          result = { level: val[3], items: val[1] }
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 35)
  def _reduce_12(val, _values, result)
          result = { items: val[1] }
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 38)
  def _reduce_13(val, _values, result)
          result = { level: val[1]}
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 41)
  def _reduce_14(val, _values, result)
          result = {}
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 45)
  def _reduce_15(val, _values, result)
          result << Smite::Game.item(val[2])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 48)
  def _reduce_16(val, _values, result)
          result = [Smite::Game.item(val[0])]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 53)
  def _reduce_17(val, _values, result)
          which = (val[1] - 1) % 5
      result = Smite::Game.god(val[0]).abilities[which]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 57)
  def _reduce_18(val, _values, result)
          which = (val[2] - 1) % 5
      result = Smite::Game.god(val[0]).abilities[which]
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 61)
  def _reduce_19(val, _values, result)
          result = Smite::Game.god(val[0]).abilities[4]
    
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

# reduce 22 omitted

# reduce 23 omitted

# reduce 24 omitted

module_eval(<<'.,.,', 'smite_parser.y', 68)
  def _reduce_25(val, _values, result)
          recommended_items = Smite::Game.god_recommended_items(val[0])[0].data
      result            = { 
        type: 'god_items',
        data: {
          god:     val[0],
          result:  recommended_items
        }
      }
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 80)
  def _reduce_26(val, _values, result)
          result = Smite::Game.item(val[0])
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 83)
  def _reduce_27(val, _values, result)
          result = Smite::Game.item(val[0]).passive
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 86)
  def _reduce_28(val, _values, result)
          result = Smite::Game.item(val[0]).effects
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 91)
  def _reduce_29(val, _values, result)
          query         = val[0][:data][:query] + ' ' + val[1][:data][:query]
      search_result = Set.new(val[0][:data][:result]) & Set.new(val[1][:data][:result])
      result = { type: 'search', data: { query: query, result: search_result.to_a } }
    
    result
  end
.,.,

# reduce 30 omitted

module_eval(<<'.,.,', 'smite_parser.y', 99)
  def _reduce_31(val, _values, result)
          filter = Smite::Game.gods.select do |g|
        val[0] =~ /phys/ ? g.physical? : g.magic?
      end
      result = {
        type: 'search',
        data: { query:  val[0], result: filter }
      }
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 108)
  def _reduce_32(val, _values, result)
          filter = Smite::Game.gods.select do |g|
        val[0] =~ /melee/ ? g.melee? : g.ranged?
      end
      result = {
        type: 'search',
        data: { query:  val[0], result: filter }
      }
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 117)
  def _reduce_33(val, _values, result)
          filter = Smite::Game.gods.select do |g|
        val[0].downcase == g.role.downcase
      end
      result = {
        type: 'search',
        data: { query:  val[0], result: filter }
      }
    
    result
  end
.,.,

module_eval(<<'.,.,', 'smite_parser.y', 126)
  def _reduce_34(val, _values, result)
          filter = Smite::Game.gods.select do |g|
        val[0].downcase == g.pantheon.downcase
      end
      result = {
        type: 'search',
        data: { query:  val[0], result: filter }
      }
    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class SmiteParser

require 'set'
require 'smite'
